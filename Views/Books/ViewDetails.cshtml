@model EReaderApp.Models.Book
@{
    ViewData["Title"] = Model.Title;
    var categories = ViewBag.Categories as List<EReaderApp.Models.Category>;
    var reviews = ViewBag.Reviews as List<EReaderApp.Models.Review>;
    var userLibraries = ViewBag.UserLibraries as List<EReaderApp.Models.Library>;
    var totalReviews = ViewBag.TotalReviews ?? 0;
    var averageRating = ViewBag.AverageRating ?? 0.0;
}

<style>
    .book-cover-large {
        height: 400px;
        width: 100%;
        background-position: center;
        background-repeat: no-repeat;
    }

    .book-title {
        font-weight: 700;
        line-height: 1.2;
    }

    #book-description {
        line-height: 1.6;
    }
</style>

<div class="container py-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <!-- Book cover and action buttons column -->
        <div class="col-md-4 mb-4">
            <div class="card border-0 shadow-sm rounded-3 overflow-hidden">
                <div class="position-relative">
                    <!-- Default image if no cover is available -->
                    <div id="book-cover" class="book-cover-large bg-light d-flex align-items-center justify-content-center"
                         style="@(string.IsNullOrEmpty(Model.ImageLink) ? "" : $"background-image: url('{Model.ImageLink}'); background-size: cover;")">
                        @if (string.IsNullOrEmpty(Model.ImageLink))
                        {
                            <i class="fas fa-book fa-4x text-secondary opacity-50"></i>
                        }
                    </div>

                    <!-- Book rating badge if available -->
                    @if (Model.Score.HasValue && totalReviews > 0)
                    {
                        <div class="position-absolute top-0 end-0 m-2 bg-primary text-white p-2 rounded">
                            <div class="d-flex align-items-center">
                                <span class="fw-bold me-1">@Model.Score.Value.ToString("0.0")</span>
                                <i class="fas fa-star ms-1"></i>
                            </div>
                            <div class="small text-center">@totalReviews reseña@(totalReviews != 1 ? "s" : "")</div>
                        </div>
                    }
                </div>

                <!-- Action buttons -->
                <div class="card-body p-3">
                    <div class="d-grid gap-2">
                        @if (!string.IsNullOrEmpty(Model.PdfPath))
                        {
                            <a asp-controller="Reader" asp-action="Read" asp-route-id="@Model.IdBook" class="btn btn-primary">
                                <i class="fas fa-book-open me-2"></i> Leer libro
                            </a>
                        }

                        @if (User.Identity.IsAuthenticated && userLibraries != null && userLibraries.Any())
                        {
                            <div class="dropdown">
                                <button class="btn btn-outline-primary dropdown-toggle w-100" type="button"
                                        id="addToLibraryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-bookmark me-2"></i> Añadir a biblioteca
                                </button>
                                <ul class="dropdown-menu w-100" aria-labelledby="addToLibraryDropdown">
                                    @foreach (var library in userLibraries)
                                    {
                                        <li>
                                            <form asp-controller="Libraries" asp-action="AddToLibrary" method="post" class="d-inline">
                                                <input type="hidden" name="bookId" value="@Model.IdBook" />
                                                <input type="hidden" name="libraryId" value="@library.IdLibrary" />
                                                <button type="submit" class="dropdown-item">@library.ListName</button>
                                            </form>
                                        </li>
                                    }
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#newLibraryModal">
                                            <i class="fas fa-plus me-2"></i> Crear nueva biblioteca
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        }
                        else if (User.Identity.IsAuthenticated)
                        {
                            <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#newLibraryModal">
                                <i class="fas fa-bookmark me-2"></i> Añadir a nueva biblioteca
                            </button>
                        }
                        else
                        {
                            <a asp-controller="Auth" asp-action="Login" asp-route-returnUrl="@Url.Action("ViewDetails", "Books", new { id = Model.IdBook })"
                               class="btn btn-outline-primary">
                                <i class="fas fa-bookmark me-2"></i> Inicia sesión para guardar
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Book details column -->
        <div class="col-md-8">
            <h1 class="book-title mb-2">@Model.Title</h1>
            @if (!string.IsNullOrEmpty(Model.Subtitle))
            {
                <h4 class="text-muted mb-3">@Model.Subtitle</h4>
            }

            <div class="mb-4">
                <h5>
                    <span class="fw-bold">Por @Model.Author</span>
                    @if (!string.IsNullOrEmpty(Model.Editorial))
                    {
                        <span class="text-muted"> • @Model.Editorial</span>
                    }
                </h5>

                <!-- Categories -->
                @if (categories != null && categories.Any())
                {
                    <div class="mb-3">
                        @foreach (var category in categories)
                        {
                            <a href="@Url.Action("Search", "Books", new { categoryId = category.IdCategory })"
                               class="badge rounded-pill bg-primary text-decoration-none me-1">
                                @category.CategoryName
                            </a>
                        }
                    </div>
                }
            </div>

            <!-- Description -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="mb-0"><i class="fas fa-info-circle me-2 text-primary"></i>Acerca de este libro</h5>
                </div>
                <div class="card-body">
                    <div id="book-description" class="mb-3">
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            <p>@Model.Description</p>
                        }
                        else
                        {
                            <p class="text-muted fst-italic">No hay descripción disponible.</p>
                        }
                    </div>

                    <!-- Details section -->
                    <div class="row mt-4" id="book-details">
                        @if (Model.PageCount.HasValue)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-file me-2 text-primary"></i>
                                    <div>
                                        <small class="text-muted d-block">Páginas</small>
                                        <span>@Model.PageCount</span>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Publisher info -->
                        @if (!string.IsNullOrEmpty(Model.Editorial))
                        {
                            <div class="col-md-4 mb-3">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-building me-2 text-primary"></i>
                                    <div>
                                        <small class="text-muted d-block">Editorial</small>
                                        <span>@Model.Editorial</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Review form partial -->
            @await Html.PartialAsync("_ReviewForm", Model)

            <!-- Reviews list partial -->
            @await Html.PartialAsync("_ReviewsList", reviews)
        </div>
    </div>
</div>

<!-- New Library Modal -->
@if (User.Identity.IsAuthenticated)
{
    <div class="modal fade" id="newLibraryModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-controller="Libraries" asp-action="Create" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Create New Library</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="FKIdUser" value="@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value" />
                        <div class="mb-3">
                            <label for="library-name" class="form-label">Library Name</label>
                            <input type="text" id="library-name" name="ListName" class="form-control" required />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Create Library</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}