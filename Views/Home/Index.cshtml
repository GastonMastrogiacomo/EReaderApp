@{
    ViewData["Title"] = "Home";
    var categories = ViewBag.Categories as List<EReaderApp.Models.Category>;
    var recentlyAddedBooks = ViewBag.RecentlyAddedBooks as List<EReaderApp.Models.Book>;
    var popularBooks = ViewBag.PopularBooks as List<EReaderApp.Models.Book>;
    var popularBooksWithRatings = ViewBag.PopularBooksWithRatings as List<dynamic>;
}

<!-- Hero Section -->
<section class="hero-section mb-5">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h1 class="display-4 fw-bold">Discover a World of Books with LibroLibre</h1>
                <p class="lead">Your gateway to unlimited reading. Access, read, and share public domain books.</p>
                <div class="mt-4">
                    <a asp-controller="Books" asp-action="Search" class="btn btn-primary btn-lg">Explore Books</a>
                    <a asp-controller="Auth" asp-action="Register" class="btn btn-outline-secondary btn-lg ms-2">Sign Up For Free</a>
                </div>
            </div>
            <div class="col-md-6">
                <img src="~/images/banner.jpg" class="img-fluid rounded" alt="Books">
            </div>
        </div>
    </div>
</section>

<!-- Featured Categories -->
<section class="mb-5">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="section-title mb-0">Browse by Category</h2>
            <a asp-controller="Books" asp-action="Search" class="btn btn-outline-primary">View All Categories</a>
        </div>
        <div class="row">
            @if (categories != null && categories.Any())
            {
                @foreach (var category in categories)
                {
                    <div class="col-md-3 col-6 mb-4">
                        <a href="@Url.Action("Search", "Books", new { categoryId = category.IdCategory })" class="category-card">
                            <div class="card h-100 text-center">
                                <div class="card-body">
                                    <i class="fas fa-book-open fa-3x mb-3 text-primary"></i>
                                    <h5>@category.CategoryName</h5>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            }
            else
            {
                <div class="col-12">
                    <div class="alert alert-info text-center">
                        <i class="fas fa-info-circle me-2"></i>
                        No categories available at the moment. Check back soon!
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<!-- Recently Added Books -->
<section class="mb-5">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="section-title mb-0">Recently Added</h2>
            <a asp-controller="Books" asp-action="Search" class="btn btn-outline-primary">View All Books</a>
        </div>

        @if (recentlyAddedBooks != null && recentlyAddedBooks.Any())
        {
            <div class="book-slider">
                <div class="row">
                    @foreach (var book in recentlyAddedBooks)
                    {
                        <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-4">
                            <div class="book-card">
                                <a asp-controller="Books" asp-action="ViewDetails" asp-route-id="@book.IdBook">
                                    <div class="book-cover-container">
                                        @if (!string.IsNullOrEmpty(book.ImageLink))
                                        {
                                            <div class="book-cover" style="background-image: url('@book.ImageLink');"></div>
                                        }
                                        else
                                        {
                                            <div class="book-cover bg-light d-flex align-items-center justify-content-center">
                                                <i class="fas fa-book fa-2x text-secondary"></i>
                                            </div>
                                        }

                                        <!-- Hover overlay with read button -->
                                        <div class="book-overlay">
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                @if (!string.IsNullOrEmpty(book.PdfPath))
                                                {
                                                    <a asp-controller="Reader" asp-action="Read" asp-route-id="@book.IdBook"
                                                       class="btn btn-primary btn-sm">
                                                        <i class="fas fa-book-open me-1"></i> Read Now
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="btn btn-secondary btn-sm disabled">
                                                        <i class="fas fa-times me-1"></i> Not Available
                                                    </span>
                                                }
                                            }
                                            else
                                            {
                                                @if (!string.IsNullOrEmpty(book.PdfPath))
                                                {
                                                    <button type="button" class="btn btn-primary btn-sm"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#homeLoginModal"
                                                            data-book-id="@book.IdBook"
                                                            data-book-title="@book.Title">
                                                        <i class="fas fa-lock me-1"></i> Login to Read
                                                    </button>
                                                }
                                                else
                                                {
                                                    <span class="btn btn-secondary btn-sm disabled">
                                                        <i class="fas fa-times me-1"></i> Not Available
                                                    </span>
                                                }
                                            }
                                        </div>
                                    </div>
                                </a>
                                <div class="book-info">
                                    <h6 class="book-title text-truncate">@book.Title</h6>
                                    <p class="book-author text-muted small mb-0">@book.Author</p>
                                    @if (book.Score.HasValue && book.Score > 0)
                                    {
                                        <div class="small mt-1">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Round(book.Score.Value))
                                                {
                                                    <i class="fas fa-star text-warning small"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star text-warning small"></i>
                                                }
                                            }
                                            <small class="text-muted ms-1">(@book.Score?.ToString("F1"))</small>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info text-center">
                <i class="fas fa-info-circle me-2"></i>
                No recently added books available at the moment.
            </div>
        }
    </div>
</section>

<!-- Popular Books -->
<section class="mb-5">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="section-title mb-0">Most Popular</h2>
            <a asp-controller="Books" asp-action="Search" class="btn btn-outline-primary">View All Books</a>
        </div>

        @if (popularBooks != null && popularBooks.Any())
        {
            <div class="book-slider">
                <div class="row">
                    @foreach (var book in popularBooks)
                    {
                        <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-4">
                            <div class="book-card">
                                <a asp-controller="Books" asp-action="ViewDetails" asp-route-id="@book.IdBook">
                                    <div class="book-cover-container">
                                        @if (!string.IsNullOrEmpty(book.ImageLink))
                                        {
                                            <div class="book-cover" style="background-image: url('@book.ImageLink');"></div>
                                        }
                                        else
                                        {
                                            <div class="book-cover bg-light d-flex align-items-center justify-content-center">
                                                <i class="fas fa-book fa-2x text-secondary"></i>
                                            </div>
                                        }

                                        <!-- Hover overlay with read button -->
                                        <div class="book-overlay">
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                @if (!string.IsNullOrEmpty(book.PdfPath))
                                                {
                                                    <a asp-controller="Reader" asp-action="Read" asp-route-id="@book.IdBook"
                                                       class="btn btn-primary btn-sm">
                                                        <i class="fas fa-book-open me-1"></i> Read Now
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="btn btn-secondary btn-sm disabled">
                                                        <i class="fas fa-times me-1"></i> Not Available
                                                    </span>
                                                }
                                            }
                                            else
                                            {
                                                @if (!string.IsNullOrEmpty(book.PdfPath))
                                                {
                                                    <button type="button" class="btn btn-primary btn-sm"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#homeLoginModal"
                                                            data-book-id="@book.IdBook"
                                                            data-book-title="@book.Title">
                                                        <i class="fas fa-lock me-1"></i> Login to Read
                                                    </button>
                                                }
                                                else
                                                {
                                                    <span class="btn btn-secondary btn-sm disabled">
                                                        <i class="fas fa-times me-1"></i> Not Available
                                                    </span>
                                                }
                                            }
                                        </div>
                                    </div>
                                </a>
                                <div class="book-info">
                                    <h6 class="book-title text-truncate">@book.Title</h6>
                                    <p class="book-author text-muted small mb-0">@book.Author</p>

                                    @{
                                        var bookWithRating = popularBooksWithRatings?.FirstOrDefault(x => x.Book.IdBook == book.IdBook);
                                        double averageRating = 0;
                                        int reviewCount = 0;

                                        if (bookWithRating != null)
                                        {
                                            averageRating = (double)bookWithRating.AverageRating;
                                            reviewCount = (int)bookWithRating.ReviewCount;
                                        }
                                        else if (book.Score.HasValue)
                                        {
                                            averageRating = book.Score.Value;
                                        }
                                    }

                                    @if (averageRating > 0)
                                    {
                                        <div class="small mt-1">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Round(averageRating))
                                                {
                                                    <i class="fas fa-star text-warning small"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star text-warning small"></i>
                                                }
                                            }
                                            <small class="text-muted ms-1">
                                                (@averageRating.ToString("F1")@(reviewCount > 0 ? $" · {reviewCount} reviews" : ""))
                                            </small>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info text-center">
                <i class="fas fa-info-circle me-2"></i>
                No popular books available at the moment.
            </div>
        }
    </div>
</section>

<!-- Features Section -->
<section class="mb-5 bg-light py-5">
    <div class="container">
        <h2 class="section-title text-center mb-5">Why Choose LibroLibre</h2>

        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="text-center">
                    <i class="fas fa-book-reader fa-3x text-primary mb-3"></i>
                    <h4>Read Anywhere</h4>
                    <p>Enjoy your books on any device with our responsive e-reader.</p>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="text-center">
                    <i class="fas fa-list fa-3x text-primary mb-3"></i>
                    <h4>Organize Your Library</h4>
                    <p>Create custom libraries to organize your reading collections.</p>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="text-center">
                    <i class="fas fa-users fa-3x text-primary mb-3"></i>
                    <h4>Join the Community</h4>
                    <p>Share your thoughts with other readers through reviews and discussions.</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Login Required Modal for Homepage -->
<div class="modal fade" id="homeLoginModal" tabindex="-1" aria-labelledby="homeLoginModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="homeLoginModalLabel">
                    <i class="fas fa-lock me-2 text-primary"></i>Join LibroLibre to Start Reading
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center py-4">
                <div class="mb-4">
                    <i class="fas fa-book-reader fa-3x text-primary mb-3"></i>
                    <h6 class="fw-bold" id="home-modal-book-title">Ready to start your reading journey?</h6>
                    <p class="text-muted mb-0">
                        Join our community of readers and enjoy unlimited access to our book collection.
                    </p>
                </div>

                <div class="d-flex gap-3 justify-content-center">
                    <a id="home-modal-login-link" href="#" class="btn btn-primary">
                        <i class="fas fa-sign-in-alt me-2"></i>Login
                    </a>
                    <a id="home-modal-register-link" href="#" class="btn btn-outline-primary">
                        <i class="fas fa-user-plus me-2"></i>Sign Up Free
                    </a>
                </div>

                <div class="mt-3">
                    <small class="text-muted">
                        <i class="fas fa-shield-alt me-1"></i>
                        Join thousands of readers exploring great books!
                    </small>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Book card hover effects */
    .book-card {
        position: relative;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .book-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .book-cover-container {
        position: relative;
        height: 200px;
        overflow: hidden;
        border-radius: 8px;
    }

    .book-cover {
        height: 100%;
        width: 100%;
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        transition: transform 0.3s ease;
    }

    .book-card:hover .book-cover {
        transform: scale(1.05);
    }

    .book-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to bottom, rgba(0,0,0,0.3), rgba(0,0,0,0.8));
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
        border-radius: 8px;
    }

    .book-card:hover .book-overlay {
        opacity: 1;
    }

    .book-overlay .btn {
        transform: translateY(20px);
        transition: transform 0.3s ease;
        box-shadow: 0 4px 15px rgba(0,0,0,0.3);
    }

    .book-card:hover .book-overlay .btn {
        transform: translateY(0);
    }

    .book-info {
        padding: 0.75rem 0;
    }

    .book-title {
        font-weight: 600;
        line-height: 1.3;
    }

    .book-author {
        font-size: 0.85rem;
    }

    /* Category card styling */
    .category-card {
        text-decoration: none;
        color: inherit;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        display: block;
    }

        .category-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            text-decoration: none;
            color: inherit;
        }

        .category-card .card {
            border: 1px solid #e0e0e0;
            transition: all 0.3s ease;
        }

        .category-card:hover .card {
            border-color: var(--primary-color, #0d6efd);
        }

    /* Hero section styling */
    .hero-section {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 4rem 0;
        border-radius: 15px;
        margin-bottom: 3rem;
    }

    /* Section title styling */
    .section-title {
        font-weight: 700;
        color: #2c3e50;
        position: relative;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 60px;
            height: 3px;
            background: var(--primary-color, #0d6efd);
            border-radius: 2px;
        }

    /* Features section styling */
    .bg-light {
        background-color: #f8f9fa !important;
    }

    /* Button styling improvements */
    .btn-primary {
        background-color: var(--primary-color, #0d6efd);
        border-color: var(--primary-color, #0d6efd);
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            background-color: var(--primary-color-dark, #0b5ed7);
            border-color: var(--primary-color-dark, #0b5ed7);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
        }

    .btn-outline-primary {
        color: var(--primary-color, #0d6efd);
        border-color: var(--primary-color, #0d6efd);
        transition: all 0.3s ease;
    }

        .btn-outline-primary:hover {
            background-color: var(--primary-color, #0d6efd);
            border-color: var(--primary-color, #0d6efd);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);
        }

    .btn-outline-secondary {
        transition: all 0.3s ease;
    }

        .btn-outline-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
        }
</style>

@section Scripts {
    <script>
        // Add this script for the homepage modal
        document.addEventListener('DOMContentLoaded', function() {
            // Handle login modal for homepage
            const homeLoginModal = document.getElementById('homeLoginModal');
            if (homeLoginModal) {
                homeLoginModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const bookId = button.getAttribute('data-book-id');
                    const bookTitle = button.getAttribute('data-book-title');

                    // Update modal content
                    const modalTitle = document.getElementById('home-modal-book-title');
                    const loginLink = document.getElementById('home-modal-login-link');
                    const registerLink = document.getElementById('home-modal-register-link');

                    if (modalTitle && bookTitle) {
                        modalTitle.textContent = `Ready to read "${bookTitle}"?`;
                    }

                    if (loginLink && bookId) {
                        const returnUrl = encodeURIComponent(`/Reader/Read/${bookId}`);
                        loginLink.href = `/Auth/Login?returnUrl=${returnUrl}`;
                    }

                    if (registerLink && bookId) {
                        const returnUrl = encodeURIComponent(`/Reader/Read/${bookId}`);
                        registerLink.href = `/Auth/Register?returnUrl=${returnUrl}`;
                    }
                });
            }
        });
    </script>
}