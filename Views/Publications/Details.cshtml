@model EReaderApp.Models.Publication
@using System.Security.Claims
@{
    ViewData["Title"] = Model.Title;
    var comments = ViewBag.Comments as List<EReaderApp.Models.Comment>;
    bool userHasLiked = ViewBag.UserHasLiked;
    int likeCount = ViewBag.LikeCount;
}


<div class="container py-4">

    <!-- Breadcrumb Navigation -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Community</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
        </ol>
    </nav>

    <!-- Main Content Grid -->
    <div class="row">
        <div class="col-lg-8">
            <!-- Publication Card -->
            <article class="card mb-4 shadow-sm border-0 animate__animated animate__fadeIn">
                <div class="post-header card-header d-flex justify-content-between align-items-center py-3">
                    <div class="d-flex align-items-center">
                        <div class="user-avatar">
                            @if (!string.IsNullOrEmpty(Model.User?.ProfilePicture))
                            {
                                <img src="@Model.User.ProfilePicture" class="rounded-circle me-3" width="56" height="56" alt="@Model.User.Name" style="object-fit: cover;" />
                            }
                            else
                            {
                                <div class="rounded-circle bg-gradient text-white d-flex align-items-center justify-content-center me-3" style="width: 56px; height: 56px; background: linear-gradient(45deg, #667eea, #764ba2);">
                                    <i class="fas fa-user"></i>
                                </div>
                            }
                        </div>
                        <div>
                            <h5 class="mb-0">@Model.User?.Name</h5>
                            <div class="d-flex align-items-center text-muted small">
                                <i class="far fa-clock me-1"></i>
                                <time datetime="@Model.CreatedAt.ToString("yyyy-MM-dd")">@Model.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</time>
                            </div>
                        </div>
                    </div>

                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || int.Parse(User.FindFirst(ClaimTypes.NameIdentifier).Value) == Model.FKIdUser))
                    {
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary rounded-circle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end shadow">
                                <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@Model.IdPublication"><i class="fas fa-edit me-2"></i> Edit Post</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@Model.IdPublication"><i class="fas fa-trash-alt me-2"></i> Delete Post</a></li>
                            </ul>
                        </div>
                    }
                </div>

                <div class="card-body py-4">
                    <h1 class="card-title h2 mb-3">@Model.Title</h1>
                    <div class="post-content">@Model.Content</div>

                    @if (!string.IsNullOrEmpty(Model.PubImageUrl))
                    {
                        <div class="text-center mt-4">
                            <img src="@Model.PubImageUrl"
                                 class="img-fluid post-image"
                                 alt="@Model.Title"
                                 onclick="openImageModal(this.src)"
                                 style="max-height: 500px; object-fit: contain;" />
                        </div>
                    }
                </div>

                <div class="card-footer bg-white border-top-0 pt-0 pb-3">
                    <!-- Engagement Stats -->
                    <div class="engagement-stats mb-3">
                        <div class="d-flex justify-content-around">
                            <div class="stat-item">
                                <i class="fas fa-heart text-danger"></i>
                                <span>@likeCount</span>
                                <span class="text-muted">Like@(likeCount != 1 ? "s" : "")</span>
                            </div>
                            <div class="stat-item">
                                <i class="fas fa-comment text-primary"></i>
                                <span>@comments.Count</span>
                                <span class="text-muted">Comment@(comments.Count != 1 ? "s" : "")</span>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="d-flex gap-2">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <form asp-action="LikePublication" method="post" class="flex-grow-1">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@Model.IdPublication" />
                                <button type="submit" class="btn @(userHasLiked ? "btn-danger" : "btn-outline-danger") w-100 like-button @(userHasLiked ? "liked" : "")">
                                    <i class="@(userHasLiked ? "fas" : "far") fa-heart me-2"></i>
                                    @(userHasLiked ? "Liked" : "Like")
                                </button>
                            </form>
                        }
                        else
                        {
                            <button class="btn btn-outline-danger flex-grow-1" onclick="window.location.href='@Url.Action("Login", "Auth")'">
                                <i class="far fa-heart me-2"></i> Like
                            </button>
                        }

                        <button class="btn btn-outline-primary flex-grow-1" onclick="document.getElementById('content').focus()">
                            <i class="far fa-comment me-2"></i> Comment
                        </button>
                    </div>
                </div>
            </article>

            <!-- Comments Section -->
            <section class="card shadow-sm border-0 animate__animated animate__fadeInUp">
                <div class="card-header bg-white py-3">
                    <h3 class="h5 mb-0 d-flex align-items-center">
                        <i class="fas fa-comments text-primary me-2"></i>
                        Comments
                        <span class="badge bg-secondary ms-2">@comments.Count</span>
                    </h3>
                </div>

                <div class="card-body">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <form asp-action="AddComment" method="post" class="comment-form mb-4">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="publicationId" value="@Model.IdPublication" />
                            <div class="mb-3">
                                <textarea name="content" id="content" class="form-control" rows="3"
                                          placeholder="Share your thoughts..." required></textarea>
                            </div>
                            <div class="text-end">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane me-2"></i> Post Comment
                                </button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="alert alert-light border text-center mb-4">
                            <i class="fas fa-lock me-2"></i>
                            <a asp-controller="Auth" asp-action="Login" class="text-decoration-none">Login</a> to join the conversation
                        </div>
                    }

                    @if (comments.Count == 0)
                    {
                        <div class="text-center py-5">
                            <i class="far fa-comment-dots fa-3x text-muted mb-3 opacity-50"></i>
                            <p class="text-muted">No comments yet. Be the first to share your thoughts!</p>
                        </div>
                    }
                    else
                    {
                        <div class="comments-list">
                            @foreach (var comment in comments)
                            {
                                <div class="comment-item d-flex">
                                    <div class="flex-shrink-0 me-3">
                                        @if (!string.IsNullOrEmpty(comment.User?.ProfilePicture))
                                        {
                                            <img src="@comment.User.ProfilePicture" class="rounded-circle" width="48" height="48"
                                                 alt="@comment.User.Name" style="object-fit: cover;" />
                                        }
                                        else
                                        {
                                            <div class="rounded-circle bg-gradient text-white d-flex align-items-center justify-content-center"
                                                 style="width: 48px; height: 48px; background: linear-gradient(45deg, #6c757d, #495057);">
                                                <i class="fas fa-user"></i>
                                            </div>
                                        }
                                    </div>
                                    <div class="flex-grow-1">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div>
                                                <h6 class="mb-0">@comment.User?.Name</h6>
                                                <small class="text-muted">
                                                    <i class="far fa-clock me-1"></i>
                                                    @comment.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
                                                </small>
                                            </div>

                                            @if (User.Identity.IsAuthenticated && (comment.FKIdUser == int.Parse(User.FindFirst(ClaimTypes.NameIdentifier).Value) || User.IsInRole("Admin")))
                                            {
                                                <form asp-action="DeleteComment" method="post"
                                                      onsubmit="return confirm('Delete this comment?')">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="commentId" value="@comment.Id" />
                                                    <input type="hidden" name="publicationId" value="@Model.IdPublication" />
                                                    <button type="submit" class="btn btn-sm btn-link text-danger p-0">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                        <p class="mb-0">@comment.Content</p>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </section>
        </div>

        <!-- Sidebar -->
        <aside class="col-lg-4">
            <div class="sticky-top" style="top: 1rem;">
                <!-- Author Info Card -->
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title mb-3">About the Author</h5>
                        <div class="d-flex align-items-center">
                            @if (!string.IsNullOrEmpty(Model.User?.ProfilePicture))
                            {
                                <img src="@Model.User.ProfilePicture" class="rounded-circle me-3" width="64" height="64"
                                     alt="@Model.User.Name" style="object-fit: cover;" />
                            }
                            else
                            {
                                <div class="rounded-circle bg-gradient text-white d-flex align-items-center justify-content-center me-3"
                                     style="width: 64px; height: 64px; background: linear-gradient(45deg, #667eea, #764ba2);">
                                    <i class="fas fa-user fa-2x"></i>
                                </div>
                            }
                            <div>
                                <h6 class="mb-1">@Model.User?.Name</h6>
                                <p class="text-muted small mb-0">Community Member</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Share Card -->
                <div class="card border-0 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title mb-3">Share this Post</h5>
                        <div class="d-flex gap-2 justify-content-center">
                            <button class="btn btn-outline-info rounded-circle" onclick="shareOnTwitter()">
                                <i class="fab fa-twitter"></i>
                            </button>
                            <button class="btn btn-outline-success rounded-circle" onclick="shareOnWhatsApp()">
                                <i class="fab fa-whatsapp"></i>
                            </button>
                            <button class="btn btn-outline-secondary rounded-circle" onclick="copyLink()">
                                <i class="fas fa-link"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </aside>
    </div>
</div>

<!-- Floating Share Button -->
<div class="floating-actions d-lg-none">
    <button class="share-button" onclick="toggleShareMenu()">
        <i class="fas fa-share-alt"></i>
    </button>
</div>



@section Scripts {
    <script>

        // Image modal functions
        function openImageModal(src) {
            document.getElementById('modalImage').src = src;
            document.getElementById('imageModal').style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closeImageModal() {
            document.getElementById('imageModal').style.display = 'none';
            document.body.style.overflow = 'auto';
        }

        // Share functions


        function shareOnTwitter() {
            const url = window.location.href;
            const text = '@Model.Title';
            window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${encodeURIComponent(text)}`, '_blank');
        }

        function shareOnWhatsApp() {
            const url = window.location.href;
            const text = '@Model.Title';
            window.open(`https://wa.me/?text=${encodeURIComponent(text + ' ' + url)}`, '_blank');
        }

        function copyLink() {
            navigator.clipboard.writeText(window.location.href).then(function() {
                // Show toast notification
                showToast('Link copied to clipboard!');
            });
        }

        function showToast(message) {
            const toast = document.createElement('div');
            toast.className = 'position-fixed bottom-0 end-0 p-3';
            toast.style.zIndex = '9999';
            toast.innerHTML = `
                <div class="toast show" role="alert">
                    <div class="toast-body">
                        <i class="fas fa-check-circle text-success me-2"></i>${message}
                    </div>
                </div>
            `;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 3000);
        }

        // Mobile share menu toggle
        function toggleShareMenu() {
            // Implementation for mobile share menu
            if (navigator.share) {
                navigator.share({
                    title: '@Model.Title',
                    text: '@Model.Content.Substring(0, Math.Min(Model.Content.Length, 100))...',
                    url: window.location.href
                });
            } else {
                copyLink();
            }
        }

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && document.getElementById('imageModal').style.display === 'block') {
                closeImageModal();
            }
        });
    </script>
}